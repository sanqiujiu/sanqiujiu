今天是做题的第二天，题目是：

给你一个 32 位的有符号整数 x ，返回将 x 中的数字部分反转后的结果。
如果反转后整数超过 32 位的有符号整数的范围 [−2^31,  2^31 − 1] ，就返回 0。
假设环境不允许存储 64 位整数（有符号或无符号）

我的想法很简单，先判断输入的是几位数，将输入的数按各个数值位分别求出再逆序输出就行了
我做的只是简单的翻转整数
不过这题的重点好像是输入数据是否溢出的判断，评论区大佬的评论并不能理解😥
还有如果输入的是十位数甚至以上，那么需要加很多的判断，我的代码就会变得很弱
待我去找找解决办法

下面是未改良的代码

class Solution {
public:
    int reverse(int x) {
        double a,b,c;
        a=x/100;
        b=(x/10)%10;
        c=x%10;
        if(x>=0)
            cout<<c<<b<<a<<endl;
        else
           cout<<"-"<<abs(c)<<abs(b)<<abs(a)<<endl;
    return 0;
    }
};
